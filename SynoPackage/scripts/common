#!/bin/sh
#
# MIT License
#
# Copyright (c) 2018 Ingo Theiss <ingo.theiss@i-matrixx.de>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

### Global package definitions

# The package name
PACKAGE_NAME="openHAB"
# Package directory
PACKAGE_LOCATION="/var/packages/openHAB"
# Package scripts directory
PACKAGE_SCRIPTS_LOCATION="${PACKAGE_LOCATION}/scripts"
# Package target directory
PACKAGE_TARGET_LOCATION="${PACKAGE_LOCATION}/target"
# openHAB certificates
OPENHAB_SYNOLOGY_CERT_STORE="/usr/local/etc/certificate/openHAB/openhab"
# openHAB environment settings from Synology DSM UI
OPENHAB_SYNOLOGY_ENV="${PACKAGE_TARGET_LOCATION}/src/userdata/etc/synology.env"
# The executed script name
SCRIPT_NAME="${0##*/}"

### Executable binary definitions

BIN_CHMOD="/bin/chmod"
BIN_CHOWN="/bin/chown"
BIN_CAT="/bin/cat"
BIN_CP="/bin/cp"
BIN_FIND="/bin/find"
BIN_JAVA_KEYTOOL="/var/packages/Java8/target/j2sdk-image/bin/keytool"
BIN_LN="/bin/ln"
BIN_MKDIR="/bin/mkdir"
BIN_MV="/bin/mv"
BIN_OPENSSL="/bin/openssl"
BIN_PIDOF="/bin/pidof"
BIN_RM="/bin/rm"
BIN_RMDIR="/bin/rmdir"
BIN_SED="/bin/sed"
BIN_SERVICETOOL="/usr/syno/bin/servicetool"
BIN_SYNOPKGCTL="/usr/syno/sbin/synopkgctl"
BIN_SYNOSHARE="/usr/syno/sbin/synoshare"
BIN_SYNOUSER="/usr/syno/sbin/synouser"

### Functions

create_cert_keystore()
{
    if [ -d ${OPENHAB_SYNOLOGY_CERT_STORE} ]
    then
        # Create a pkcs12 keystore with key and certificate. This step is necessary because keytool does not provide a functionality to import a private key to a keystore!
        ${BIN_OPENSSL} pkcs12 \
            -export \
            -certfile ${OPENHAB_SYNOLOGY_CERT_STORE}/fullchain.pem \
            -in ${OPENHAB_SYNOLOGY_CERT_STORE}/cert.pem \
            -inkey ${OPENHAB_SYNOLOGY_CERT_STORE}/privkey.pem \
            -out ${OPENHAB_SYNOLOGY_CERT_STORE}/openhab.p12 \
            -name mykey \
            -password pass:changeit

        if [ $? -ne 0 ]
        then
            logger -p 0 "${PACKAGE_NAME}_${SCRIPT_NAME}: failed to create openHAB pkcs12 keystore from Synology default certificate."
        fi

        # Import Synology certificate from pkcs12 keystore in to openHAB truststore
        ${BIN_JAVA_KEYTOOL} \
            -importkeystore \
            -noprompt \
            -deststorepass openhab \
            -destkeypass openhab \
            -destkeystore ${PACKAGE_TARGET_LOCATION}/src/userdata/etc/keystore \
            -srckeystore ${OPENHAB_SYNOLOGY_CERT_STORE}/openhab.p12 \
            -srcstoretype PKCS12 \
            -srcstorepass changeit \
            -alias mykey &>/dev/null

	if [ $? -ne 0 ]
        then
            logger -p 0 "${PACKAGE_NAME}_${SCRIPT_NAME}: failed to import Synology certificate in openHAB truststore."
        fi

        # Update permissions
        ${BIN_CHOWN} ${PACKAGE_NAME}:${PACKAGE_NAME} ${OPENHAB_SYNOLOGY_CERT_STORE}/openhab.p12
        ${BIN_CHMOD} 400 ${OPENHAB_SYNOLOGY_CERT_STORE}/openhab.p12
        ${BIN_CHMOD} 640 ${PACKAGE_TARGET_LOCATION}/src/userdata/etc/keystore
    fi
}
